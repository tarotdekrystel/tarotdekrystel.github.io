# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# Activar en flujo de trabajo, en un sevidor; con la última versión, del sistema operativo, Linux Ubuntu y el paquete de servidor Node.js:
# Aunque se pueden ajustar parámetros; viene preparado, desde su repositorio, para no necesitar modificarlo.
name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    # Acceso a la terminal de comandos, de linux y Node.js:
    # Para poder guardar, como variables secretas de entorno, los tokens de acceso de los usuarios.
    # Hay que ajustar, los parámetros del sistema.
    - name: Setup Node.js environment
      uses: actions/setup-node@v2.5.1
      with:
        # Set always-auth in npmrc
        always-auth: # optional, default is false
        # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
        node-version: # optional
        # File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version
        node-version-file: # optional
        # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
        architecture: # optional
        # Set this option if you want the action to check for the latest available version that satisfies the version spec
        check-latest: # optional
        # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN
        registry-url: # optional
        # Optional scope for authenticating against scoped registries
        scope: # optional
        # Used to pull node distributions from node-versions.  Since there's a default, this is typically not supplied by the user.
        token: # optional, default is ${{ github.token }}
        # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm
        cache: # optional
        # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
        cache-dependency-path: # optional
        # Deprecated. Use node-version instead. Will not be supported after October 1, 2019
        version: # optional
    # Guardar en memoria caché, las acciones ajenas a ejecutar. Acelera el proceso y reduce el consumo de recursos:
    # Hay que añadir, en los lugares oportunos, las acciones ajenas a ejecutar.
    - name: Cache
      uses: actions/cache@v2.1.7
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: 
        # An explicit key for restoring and saving the cache
        key: 
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: # optional
        # The chunk size used to split up large files during upload, in bytes
        upload-chunk-size: # optional
